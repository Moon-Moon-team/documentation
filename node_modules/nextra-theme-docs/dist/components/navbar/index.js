import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import cn from "clsx";
import NextLink from "next/link";
import { Anchor } from "nextra/components";
import { DiscordIcon, GitHubIcon } from "nextra/icons";
import { element } from "nextra/schemas";
import { z } from "zod";
import { fromZodError } from "zod-validation-error";
import { ClientNavbar } from "./index.client";
const propsSchema = z.strictObject({
  children: element.optional(),
  logoLink: z.union([z.string(), z.boolean()]).default(true),
  logo: element,
  projectLink: z.string().optional(),
  projectIcon: element.default(/* @__PURE__ */ jsx(GitHubIcon, { height: "24" })),
  chatLink: z.string().optional(),
  chatIcon: element.default(/* @__PURE__ */ jsx(DiscordIcon, { width: "24" }))
});
const Navbar = (props) => {
  const $ = _c(21);
  let data;
  if ($[0] !== props) {
    const {
      data: t02,
      error
    } = propsSchema.safeParse(props);
    data = t02;
    if (error) {
      throw fromZodError(error);
    }
    $[0] = props;
    $[1] = data;
  } else {
    data = $[1];
  }
  const {
    children,
    logoLink,
    logo,
    projectLink,
    projectIcon,
    chatLink,
    chatIcon
  } = data;
  let t0;
  let t1;
  let t2;
  if ($[2] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = cn("nextra-navbar x:sticky x:top-0 x:z-20 x:w-full x:bg-transparent x:print:hidden", "x:max-md:[.nextra-banner:not([class$=hidden])~&]:top-(--nextra-banner-height)");
    t1 = /* @__PURE__ */ jsx("div", { className: cn("nextra-navbar-blur", "x:absolute x:-z-1 x:size-full", "nextra-border x:border-b", "x:backdrop-blur-md x:bg-nextra-bg/70") });
    t2 = {
      height: "var(--nextra-navbar-height)"
    };
    $[2] = t0;
    $[3] = t1;
    $[4] = t2;
  } else {
    t0 = $[2];
    t1 = $[3];
    t2 = $[4];
  }
  let t3;
  if ($[5] !== logo || $[6] !== logoLink) {
    t3 = logoLink ? /* @__PURE__ */ jsx(NextLink, { href: typeof logoLink === "string" ? logoLink : "/", className: "x:focus-visible:nextra-focus x:flex x:items-center x:hover:opacity-75 x:me-auto", children: logo }) : /* @__PURE__ */ jsx("div", { className: "x:flex x:items-center x:me-auto", children: logo });
    $[5] = logo;
    $[6] = logoLink;
    $[7] = t3;
  } else {
    t3 = $[7];
  }
  let t4;
  if ($[8] !== projectIcon || $[9] !== projectLink) {
    t4 = projectLink && /* @__PURE__ */ jsx(Anchor, { href: projectLink, children: projectIcon });
    $[8] = projectIcon;
    $[9] = projectLink;
    $[10] = t4;
  } else {
    t4 = $[10];
  }
  let t5;
  if ($[11] !== chatIcon || $[12] !== chatLink) {
    t5 = chatLink && /* @__PURE__ */ jsx(Anchor, { href: chatLink, children: chatIcon });
    $[11] = chatIcon;
    $[12] = chatLink;
    $[13] = t5;
  } else {
    t5 = $[13];
  }
  let t6;
  if ($[14] !== children || $[15] !== t4 || $[16] !== t5) {
    t6 = /* @__PURE__ */ jsxs(ClientNavbar, { children: [
      t4,
      t5,
      children
    ] });
    $[14] = children;
    $[15] = t4;
    $[16] = t5;
    $[17] = t6;
  } else {
    t6 = $[17];
  }
  let t7;
  if ($[18] !== t3 || $[19] !== t6) {
    t7 = /* @__PURE__ */ jsxs("header", { className: t0, children: [
      t1,
      /* @__PURE__ */ jsxs("nav", { style: t2, className: "x:mx-auto x:flex x:max-w-(--nextra-content-width) x:items-center x:justify-end x:gap-4 x:pl-[max(env(safe-area-inset-left),1.5rem)] x:pr-[max(env(safe-area-inset-right),1.5rem)]", children: [
        t3,
        t6
      ] })
    ] });
    $[18] = t3;
    $[19] = t6;
    $[20] = t7;
  } else {
    t7 = $[20];
  }
  return t7;
};
export {
  Navbar
};
