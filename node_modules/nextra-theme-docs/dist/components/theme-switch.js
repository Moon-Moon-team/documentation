"use client";
import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import { useTheme } from "next-themes";
import { Select } from "nextra/components";
import { useMounted } from "nextra/hooks";
import { MoonIcon, SunIcon } from "nextra/icons";
import { useThemeConfig } from "../stores";
const ThemeSwitch = (t0) => {
  const $ = _c(24);
  const {
    lite,
    className
  } = t0;
  const {
    setTheme,
    resolvedTheme,
    theme
  } = useTheme();
  const mounted = useMounted();
  const {
    darkMode,
    themeSwitch
  } = useThemeConfig();
  if (!darkMode) {
    return null;
  }
  const IconToUse = mounted && resolvedTheme === "dark" ? MoonIcon : SunIcon;
  const id = mounted ? theme : "light";
  let t1;
  if ($[0] !== themeSwitch.light) {
    t1 = {
      id: "light",
      name: themeSwitch.light
    };
    $[0] = themeSwitch.light;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== themeSwitch.dark) {
    t2 = {
      id: "dark",
      name: themeSwitch.dark
    };
    $[2] = themeSwitch.dark;
    $[3] = t2;
  } else {
    t2 = $[3];
  }
  let t3;
  if ($[4] !== themeSwitch.system) {
    t3 = {
      id: "system",
      name: themeSwitch.system
    };
    $[4] = themeSwitch.system;
    $[5] = t3;
  } else {
    t3 = $[5];
  }
  let t4;
  if ($[6] !== t1 || $[7] !== t2 || $[8] !== t3) {
    t4 = [t1, t2, t3];
    $[6] = t1;
    $[7] = t2;
    $[8] = t3;
    $[9] = t4;
  } else {
    t4 = $[9];
  }
  let t5;
  if ($[10] !== IconToUse) {
    t5 = /* @__PURE__ */ jsx(IconToUse, { height: "12" });
    $[10] = IconToUse;
    $[11] = t5;
  } else {
    t5 = $[11];
  }
  const t6 = lite ? "x:md:hidden" : "";
  const t7 = themeSwitch[id];
  let t8;
  if ($[12] !== t6 || $[13] !== t7) {
    t8 = /* @__PURE__ */ jsx("span", { className: t6, children: t7 });
    $[12] = t6;
    $[13] = t7;
    $[14] = t8;
  } else {
    t8 = $[14];
  }
  let t9;
  if ($[15] !== t5 || $[16] !== t8) {
    t9 = /* @__PURE__ */ jsxs("span", { className: "x:flex x:items-center x:gap-2 x:capitalize", children: [
      t5,
      t8
    ] });
    $[15] = t5;
    $[16] = t8;
    $[17] = t9;
  } else {
    t9 = $[17];
  }
  let t10;
  if ($[18] !== className || $[19] !== id || $[20] !== setTheme || $[21] !== t4 || $[22] !== t9) {
    t10 = /* @__PURE__ */ jsx(Select, { className, title: "Change theme", options: t4, onChange: setTheme, value: id, selectedOption: t9 });
    $[18] = className;
    $[19] = id;
    $[20] = setTheme;
    $[21] = t4;
    $[22] = t9;
    $[23] = t10;
  } else {
    t10 = $[23];
  }
  return t10;
};
export {
  ThemeSwitch
};
