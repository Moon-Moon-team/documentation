import { jsx, jsxs } from "react/jsx-runtime";
import { c as _c } from "react-compiler-runtime";
import cn from "clsx";
import { ArrowRightIcon } from "../icons/index.js";
const Summary = (t0) => {
  const $ = _c(11);
  let children;
  let className;
  let props;
  if ($[0] !== t0) {
    ({
      children,
      className,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = props;
  } else {
    children = $[1];
    className = $[2];
    props = $[3];
  }
  let t1;
  if ($[4] !== className) {
    t1 = cn("x:focus-visible:nextra-focus", "x:flex x:items-center x:cursor-pointer x:p-1 x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800", "x:[&::-webkit-details-marker]:hidden", "x:whitespace-pre-wrap", "x:select-none x:rounded", className);
    $[4] = className;
    $[5] = t1;
  } else {
    t1 = $[5];
  }
  let t2;
  if ($[6] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = /* @__PURE__ */ jsx(ArrowRightIcon, { height: "16", className: cn("x:order-first", "x:shrink-0 x:mx-1.5 x:motion-reduce:transition-none", "x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition"), strokeWidth: "3" });
    $[6] = t2;
  } else {
    t2 = $[6];
  }
  let t3;
  if ($[7] !== children || $[8] !== props || $[9] !== t1) {
    t3 = /* @__PURE__ */ jsxs("summary", { className: t1, ...props, children: [
      children,
      t2
    ] });
    $[7] = children;
    $[8] = props;
    $[9] = t1;
    $[10] = t3;
  } else {
    t3 = $[10];
  }
  return t3;
};
export {
  Summary
};
