import path from "path";
import { createAstObject } from "../utils.js";
function cleanFilePath(filePath) {
  const { dir, name } = path.parse(filePath);
  return (
    // Remove `content` prefix
    `${dir.replace(/^(src\/)?content\/?/, "")}_${name}`.replaceAll(/[\W_]+/g, "_").replace(/^_/, "").replace(/^\d/, (match) => `_${match}`)
  );
}
function convertPageMapToAst(pageMap, imports) {
  const elements = pageMap.map((item) => {
    if ("children" in item) {
      return createAstObject({
        name: item.name,
        route: item.route,
        children: convertPageMapToAst(item.children, imports)
      });
    }
    if ("route" in item) {
      const filePath2 = item.__pagePath;
      const importName2 = cleanFilePath(filePath2);
      imports.push({ importName: importName2, filePath: filePath2 });
      return createAstObject({
        name: item.name,
        route: item.route,
        frontMatter: { type: "Identifier", name: importName2 }
      });
    }
    const filePath = item.__metaPath;
    const importName = cleanFilePath(filePath);
    imports.push({ importName, filePath });
    return createAstObject({
      data: { type: "Identifier", name: importName }
    });
  });
  return { type: "ArrayExpression", elements };
}
export {
  convertPageMapToAst
};
